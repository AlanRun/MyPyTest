[pytest]
addopts = -vs --alluredir=temp/ --durations=3 -vv --clean-alluredir

#--pdb 失败进入调试
#-s:表示输出调试信息，包括print打印的信息
#-v:显示更详细的信息
#-vs : 这两个参数一起用
#-n: 支持多线程或者分布式运行测试用例。如 : pytest -vs ./testcase/test_login.py -n 2--reruns NUM :失败用例重跑
#-x : 表示只要要一个用例报错，那么测试停止--maxfail=2 出现两个用例失败就停止。
#-k:根据测试用例的部分字符串指定测试用例如 : pytest -vs ./testcase -k "ao"
#--durations=3 -vv:获取最慢3条用例执行耗时
#--junitxml=path:生成junitxml格式结果文件
#-p no:doctest:关闭doctest插件
#-qq:调用自定义插件
#-m MARKEXPR:只运行带有指定标记的用例。如 pytest -vs ./testcase -m smoke

testpaths = ./testcases/

python_files = test*.py

python_classes = Test*

python_functions = test

markers =
    smoke:冒烟测试

#env:指定测试用例的执行环境，如：dev、test，[]内为环境名称，后面为环境变量配置
env = dev

[dev]
ip = 192.168.3.51
port = 8079
base_url = http://192.168.3.51:8079
db_config = {
    'db_host': '192.168.3.51'
    'db_port': 3306
    'db_username': 'root'
    'db_password': 'password'
    'db_database': 'db1'}

[test]
db_host = 192.168.3.51
db_port =3306
db_username = root
db_password = password
db_database = db1